%TASK 1: DATA EXTRACTION

% This part of code is for uploading each file of Olist dataset
customer=readtable('olist_customers_dataset.csv');
location=readtable('olist_geolocation_dataset.csv');
order_items=readtable('olist_order_items_dataset.csv');
order_payments=readtable('olist_order_payments_dataset.csv');
order_reviews=readtable('olist_order_reviews_dataset.csv');
orders=readtable('olist_orders_dataset.csv');
products=readtable('olist_products_dataset.csv');
sellers=readtable('olist_sellers_dataset.csv');
prod_cat_name_transl=readtable('product_category_name_translation.csv');



%TASK 2: DATA EXPLORATION

%This part of code is to examine 
% the size of column and rows,
% name of attributes, and
% nunmber of total missing values for each attribute of
% all tables from the original Olist dataset

head(customer)%returns the column names/ top rows of the table
height(customer)%returns the number of rows/data points of the table
width(customer)%returns the number of columns of the table
cust_mv= sum(ismissing(customer));%returns the total number of missing values in each column of the table

head(location)
height(location)
width(location)
loc_mv= sum(ismissing(location));

head(order_items)
height(order_items)
width(order_items)
orderitems_mv=sum(ismissing(order_items));

head(order_payments)
height(order_payments)
width(order_payments)
ordpay_mv=sum(ismissing(order_payments));

head(order_reviews)
height(order_reviews)
width(order_reviews)
ordrev_mv=sum(ismissing(order_reviews));

head(orders)
height(orders)
width(orders)
orders_mv=sum(ismissing(orders));

head(products)
height(products)
width(products)
product_mv=sum(ismissing(products));


head(sellers)
height(sellers)
width(sellers)
seller_mv=sum(ismissing(sellers));

head(prod_cat_name_transl)
height(prod_cat_name_transl)
width(prod_cat_name_transl)
pcnt_mv=sum(ismissing(prod_cat_name_transl));

%Heatmap
%This part of code is to create a heatmap for missing values of a table
figure(1);heatmap_order=heatmap(orders_mv, 'Title', 'Order Table Missing Values');
figure(2);heatmap_product=heatmap(product_mv,'Title','Product Table Missing Value');
figure(3);heatmap_orderreview=heatmap(ordrev_mv, 'Title', 'Order Review Table Missing Values');


%TASK 3: DATA TRANSFORMATION

%This part is for creating a random sampling of 500 rows of datapoints 
% so that it is easy to work with than handling 100 000 rows of datapoints.
Sample_Customer=datasample(customer,500);
Sample_Location=datasample(location,500);
Sample_OrderItem=datasample(order_items,500);
Sample_Payment=datasample(order_payments,500);
Sample_Review=datasample(order_reviews,500);
Sample_Orders=datasample(orders,500);
Sample_Products=datasample(products,500);
Sample_Sellers=datasample(sellers,500);

%This part of code is for removing column of redundant feautures
removecol_Product=removevars(Sample_Products,{'product_width_cm','product_description_lenght','product_length_cm', ...
    'product_name_lenght','product_weight_g','product_height_cm','product_photos_qty',});
removecol_Location=removevars(Sample_Location,{'geolocation_lat', 'geolocation_lng'});
removecol_Payment=removevars(Sample_Payment,'payment_sequential');
removecol_Review=removevars(Sample_Review,{'review_comment_message','review_comment_title',});

%This part of code is for finding missing values for each sample table using
%ismissing code will identify the total count of missing values for each
%attribute/column
MV_SampleCustomer=sum(ismissing(Sample_Customer));
MV_SampleLocation=sum(ismissing(removecol_Location));
MV_SampleOrderItem=sum(ismissing(Sample_OrderItem));
MV_SamplePayment=sum(ismissing(removecol_Payment));
MV_SampleReview=sum(ismissing(removecol_Review));
MV_SampleOrder=sum(ismissing(Sample_Orders));
MV_SampleProduct=sum(ismissing(removecol_Product));
MV_SampleSeller=sum(ismissing(Sample_Sellers));
MV_ProductNameTranslation=sum(ismissing(prod_cat_name_transl));

%This part of code is for removing rows that has missing values
removerow_Order=rmmissing(Sample_Orders, 'DataVariables',{'order_approved_at','order_delivered_carrier_date', ...
    'order_delivered_customer_date'});
removerow_Product=rmmissing(removecol_Product,'DataVariables',{'product_category_name'});
height(removerow_Product)
height(removerow_Order)


%This part of code is for encoding the sample files which contains categorical
%variables

encode_Customer=convertvars(Sample_Customer,{'customer_city','customer_state'},'categorical');
encode_Location=convertvars(Sample_Location,{'geolocation_city','geolocation_state'},'categorical');
encode_Payment=convertvars(Sample_Payment,'payment_type','categorical');
encode_Order=convertvars(Sample_Orders,'order_status','categorical');
encode_Product=convertvars(Sample_Products,'product_category_name','categorical');
encode_Seller=convertvars(Sample_Sellers,{'seller_city','seller_state'},'categorical');
encode_ProductNameTranslation=convertvars(prod_cat_name_transl, ...
    {'product_category_name','product_category_name_english'},'categorical');

%Summary of the transformed and clean files
summary(encode_Customer)
S_cust=summary(encode_Customer);

summary(encode_Location)
S_loc=summary(encode_Location);

summary(Sample_OrderItem)
S_item=summary(Sample_OrderItem);

summary(encode_Payment)
S_paym=summary(encode_Payment);

summary(removecol_Review)
S_review=summary(removecol_Review);

summary(encode_Order)
S_order=summary(encode_Order);

summary(encode_Product)
S_prod=summary(encode_Product);

summary(encode_Seller)
S_seller=summary(encode_Seller);

summary(encode_ProductNameTranslation)
S_pnt=summary(encode_ProductNameTranslation);


